name: Deploy to Amazon EKS

on:
  push:
    branches: 
      - main
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}         
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} 
  CONTAINER_NAME: app-techchallenge        
                                            
permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION_ID }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Criar arquivo kubeconfig
      run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION_ID }} --name ${{ secrets.EKS_CLUSTER_NAME }}

    - name: get details 
      run:  kubectl get all

    - name: kubectl-apply
      run: |
        kubectl apply \
        -f kubernetes/app/app-deployment.yaml \
        -f kubernetes/app/app-hpa.yaml \
        -f kubernetes/app/app-svc.yaml 

 


